- name: ensure not running all tasks with sudo
  ansible.builtin.fail:
    msg: "Do not run all tasks with sudo"
  when:
    - ansible_env.USER == "root"
  tags: always

- block:
    - name: Linux - install black (pip3)
      pip:
        name: "{{ ansible_loop.allitems }}"
        executable: pip3
        state: latest
        extra_args: '--user --upgrade --no-cache-dir'
      loop_control:
        extended: yes
      loop:
        - black
      tags: ['pip', 'pip3', 'python']
      when:
        - ansible_facts['system'] == "Linux"
        - not ansible_facts['distribution'] == "Fedora"

    - name: Linux - install packages
      become: true
      ansible.builtin.package:
        name:
          - gcc
          - git
          - golang-x-tools-gopls
          - "{{ nodejs_package_name }}"
          - powerline-fonts
        state: present
      when: ansible_facts['os_family'] == "RedHat"

    - name: Linux - install packages (Fedora)
      become: true
      ansible.builtin.dnf:
        name:
          - black
          - cascadia-code-nf-fonts
          - cascadia-mono-nf-fonts
          - neovim
          - python3-neovim
          - uv
        state: present
      when: ansible_distribution == "Fedora"

    - name: Install pyright node.js package globally
      become: true
      community.general.npm:
        name: 'pyright'
        global: true

  tags: ['vim', 'install', 'dependencies']

- block:
    - name: create directories
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/{{ item }}"
        state: directory
        owner: "{{ ansible_env.USER }}"
        mode: 0700
      loop:
        - ".vim"
        - ".config/nvim"
        - ".config/nvim/lsp"
        - ".config/nvim/lua"
        - ".config/nvim/lua/config"
        - ".config/nvim/lua/plugins"

    - name: copy neovim config file(s)
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "{{ ansible_env.HOME }}/.{{ item }}"
        owner: "{{ ansible_env.USER }}"
        mode: 0600
      loop:
        - 'config/nvim/init.lua'
        - 'config/nvim/lsp/pyright.lua'
        - 'config/nvim/lsp/terraformls.lua'
        - 'config/nvim/lua/config/lazy.lua'
        - 'config/nvim/lua/config/lsp.lua'
        - 'config/nvim/lua/config/options.lua'
        - 'config/nvim/lua/plugins/nvim-lspconfig.lua'
        - 'config/nvim/lua/plugins/nvim-lualine.lua'
        - 'config/nvim/lua/plugins/nvim-telescope.lua'
        - 'config/nvim/lua/plugins/nvim-treesitter.lua'
        - 'config/nvim/lua/plugins/vim-fugitive.lua'
        - 'config/nvim/lua/plugins/vim-terraform.lua'

    #- name: copy neovim config file template(s)
    #  ansible.builtin.template:
    #    src: "{{ item }}.j2"
    #    dest: "{{ ansible_env.HOME }}/.{{ item }}"
    #    owner: "{{ ansible_env.USER }}"
    #    mode: 0600
    #  loop:
    #    - 'config/nvim/lua/plugins/nvim-lspconfig.lua'

  tags: ['vim', 'config']

- name: zellij - import tasks
  import_tasks: zellij.yml
  become: true
  when: zellij|bool
  tags: zellij

