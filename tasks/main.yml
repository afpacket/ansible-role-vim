- name: ensure not running all tasks with sudo
  ansible.builtin.fail:
    msg: "Do not run all tasks with sudo"
  when:
    - ansible_env.USER == "root"
  tags: always

- block:
    - name: Linux - install black (pip3)
      pip:
        name: "{{ ansible_loop.allitems }}"
        executable: pip3
        state: latest
        extra_args: '--user --upgrade --no-cache-dir'
      loop_control:
        extended: yes
      loop:
        - black
      tags: ['pip', 'pip3', 'python']
      when:
        - ansible_facts['system'] == "Linux"
        - not ansible_facts['distribution'] == "Fedora"

    - name: Linux - install packages
      become: yes
      ansible.builtin.package:
        name:
          - black
          - neovim
          - powerline-fonts
        state: present
      when: ansible_facts['os_family'] == "RedHat"

    - name: Linux - install packages (Fedora)
      become: yes
      ansible.builtin.dnf:
        name:
          - black
        state: present
      when: ansible_distribution == "Fedora"

- block:
    - name: create directories
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/{{ item }}"
        state: directory
        owner: "{{ ansible_env.USER }}"
        mode: 0700
      with_items:
        - ".vim"
        - ".vim/autoload"

    - name: vim-plug - plug.vim
      ansible.builtin.get_url:
        url: "https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
        dest: "{{ item }}"
        owner: "{{ ansible_env.USER }}"
        mode: 0640
      loop:
        - "{{ ansible_env.HOME }}/.vim/autoload/plug.vim"

    - name: copy vimrc
      ansible.builtin.template:
        src: "{{ item }}.j2"
        dest: "{{ ansible_env.HOME }}/.{{ item }}"
        owner: "{{ ansible_env.USER }}"
        mode: 0600
      with_items:
        - vimrc

    - name: copy nvim init.vim
      ansible.builtin.template:
        src: "nvim-init.vim.j2"
        dest: "{{ ansible_env.HOME }}/.config/nvim/init.vim"
        owner: "{{ ansible_env.USER }}"
        mode: 0600

    - name: install plugins
      ansible.builtin.command: 'vim +PlugInstall +qall'
      tags: plugins

    - name: copy supplemental file(s)
      ansible.builtin.template:
        src: "{{ item }}.j2"
        dest: "{{ ansible_env.HOME }}/.vim/{{ item }}"
        owner: "{{ ansible_env.USER }}"
        mode: 0600
      with_items:
        - filetype.vim

  tags: vim
